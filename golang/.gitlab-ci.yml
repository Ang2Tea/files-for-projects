variables:  
  GIT_CLEAN_FLAGS: -fxd -e ".go"
  GOPATH: $CI_PROJECT_DIR/.go
  MAIN_PKG_PATH: ./cmd/*
  COVERAGE_EXCLUDE: "_gen.go|http_server" # Регулярка для исключения из покрытия
  GO_VERSION: 1.23-alpine
  GOLANGCI_LINT_VERSION: v1.63.4
  JUNIT_REPORT_VERSION: latest
  GOCOVER_COBERTURA_VERSION: latest

default:
  image: golang:${GO_VERSION}
  cache: &global_cache
    key:
      files:
        - "go.sum"
      prefix: ${CI_PROJECT_NAME}
    paths:
      - ${GOPATH}/pkg/mod
      - ${GOPATH}/bin
    policy: pull

stages:
  - prepare
  - test
  - build

prepare: &prepare_config
  stage: prepare
  cache:
    <<: *global_cache
    policy: pull-push
  script:
    - mkdir -p ${GOPATH}
    - go mod download

    # Установка утилит для тестов
    - go install github.com/jstemmer/go-junit-report/v2@${JUNIT_REPORT_VERSION}
    - go install github.com/boumenot/gocover-cobertura@${GOCOVER_COBERTURA_VERSION}

    # Установка линтера
    - go install github.com/golangci/golangci-lint/cmd/golangci-lint@${GOLANGCI_LINT_VERSION}

.lint_template: &lint_config
  stage: test
  script:
    - ${GOPATH}/bin/golangci-lint run
      --print-issued-lines=false 
      --out-format code-climate:gl-code-quality-report.json,line-number
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths:
      - gl-code-quality-report.json
    expire_in: 1 day

.test_template: &test_config
  stage: test
  script:
    - mkdir -p reports
    - go test -v -coverpkg=./... -coverprofile=reports/cover.out.tmp ./... 2>&1 | tee reports/test-report.txt
    - grep -vE "${COVERAGE_EXCLUDE}" reports/cover.out.tmp > reports/cover.out
    - ${GOPATH}/bin/go-junit-report < reports/test-report.txt > reports/junit.xml
    - ${GOPATH}/bin/gocover-cobertura < reports/cover.out > reports/coverage.xml
    - go tool cover -func reports/cover.out
  artifacts:
    reports:
      junit: reports/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: reports/coverage.xml
    paths:
      - reports/
    expire_in: 1 day
  coverage: '/total:\t+\(statements\)\t+(\d+\.\d+)%/'

.build_template: &build_config
  stage: build
  script:
    - mkdir -p bin
    - for pkg in $(go list ${MAIN_PKG_PATH}); do
      CMD_NAME=$(basename ${pkg});
      go build -o bin/${CMD_NAME} ${pkg};
      done
  artifacts:
    paths:
      - bin/
    expire_in: 1 week



# # Пример использования
# include:
#   - local: 'template.gitlab-ci.yml'

# variables:
#   TZ: Europe/Moscow
#   GO_VERSION: "1.23-alpine"
#   GOLANGCI_LINT_VERSION: "v1.63.4"

# # Jobs
# golangci-lint:
#   extends: .lint_template
#   needs: ["prepare"]

# unit-tests:
#   extends: .test_template
#   needs: ["prepare"]

# build:
#   extends: .build_template
#   needs: ["prepare"]

